#version 450

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(r32f, binding = 0) uniform image3D field;

void main()
{
    const ivec3 coord = ivec3(gl_GlobalInvocationID.xyz);
    const ivec3 size = imageSize(field);
    //const float kernel[3] = float[](0.125, 0.25, 0.125);

    if (coord.x >= size.x || coord.y >= size.y || coord.z >= size.z) return;

    float mean = 0.0;

    for(int X = -1; X <= 1; X++){
        ivec3 pos = clamp(coord + ivec3(X,0,0), ivec3(0), ivec3(size - 1));
        mean += imageLoad(field, pos).x * mix(0.5, 0.25, abs(float(X)));
    }

    barrier();
    imageStore(field, coord, vec4(mean));

    //mean -= 0.1;

    //vec3 damp = (vec3(coord) - vec3(256)) / vec3(256);
    //float len = length(damp);
    //damp = abs(damp);//smoothstep(vec3(0), vec3(1), vec3(1) - abs(damp));
    //mean -= smoothstep(0.5, 1.0, len);//damp.x*damp.y*damp.z*0.1;
    //mean = max(0.0, mean);
    //mean = min(3, mean);

}
